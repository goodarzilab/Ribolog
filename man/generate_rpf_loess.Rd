% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MODULE_1_CELP.R
\name{generate_rpf_loess}
\alias{generate_rpf_loess}
\title{generate_rpf_loess}
\usage{
generate_rpf_loess(tr_codon_read_count_list, codon_raduis)
}
\arguments{
\item{tr_codon_read_count_list}{A list generated by the psite_to_codon_count function
containing observed read counts per codon per trancript per sample}

\item{codon_radius}{Number of codons on either side of each codon influencing the loess prediction for the middle codon}
}
\value{
A list composed of two lists: 1. bias coefficients 2. bias-corrected read counts
The bias coefficient list has the following structure: list$<transcript.ID> data.frame: [1] codon_number [2] codon_type [3] aa_type [4] bias_coefficient.
The bias-corrected read count list has the following structure: list$<sample.name>$<transcript.ID> data.frame:
[1] codon_number [2] codon_type [3] aa_type [4] observed_count [5] loess_pred [6] loess_pred_by_nz_median [7] bias_coefficient [8] corrected_loess.
}
\description{
Function to compute per codon loess predicted read counts, bias coefficients and bias-corrected read counts
}
\details{
This function is the heart of CELP method for stalling bias correction.
It starts with running a loess curve on per-codon read counts along the transcript to borrow information
from neighboring codons mitigating the uncertainty of p-site offset assignment and experimental stochasticity.
Then, a bias coefficient is calculated for each codon by integrating infromation on the excess of loess-corrected
read counts at that codons comapred to the transcript's background count across multiple samples. Finally, observed
read counts are divided by bias coefficients to calculate bias-corrected counts.
}
\examples{
tr_codon_bias_coeff_corrected_count <- generate_rpf_loess (tr_codon_read_count, 5)
}
